// <auto-generated />
using FeatureSharp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace FeatureSharp.Data.Migrations
{
    [DbContext(typeof(FeatureSharpDbContext))]
    [Migration("20180125145106_CreateRole")]
    partial class CreateRole
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FeatureSharp.Models.Feature", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AuthorId");

                    b.Property<string>("Description");

                    b.Property<bool>("Enabled");

                    b.Property<string>("Name");

                    b.Property<Guid?>("RoleID");

                    b.HasKey("ID");

                    b.HasIndex("AuthorId");

                    b.HasIndex("RoleID");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("FeatureSharp.Models.Role", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("FeatureSharp.Models.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool>("Inactive");

                    b.Property<string>("LastName");

                    b.Property<Guid?>("RoleID");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FeatureSharp.Models.Feature", b =>
                {
                    b.HasOne("FeatureSharp.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FeatureSharp.Models.Role")
                        .WithMany("Features")
                        .HasForeignKey("RoleID");
                });

            modelBuilder.Entity("FeatureSharp.Models.User", b =>
                {
                    b.HasOne("FeatureSharp.Models.Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID");
                });
#pragma warning restore 612, 618
        }
    }
}
